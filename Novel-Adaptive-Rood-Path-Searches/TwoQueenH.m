% 2004 A Hierarchical N-Queen Decimation Lattice 
%  Input: 16x16 data
% Output:  8x16 data
% Horizontal 2-Queen
function Out4Queen = TwoQueenH(Input)

[s1,s2] = size(Input); % 16x16 expected
Out4Queen = zeros(8,16); % 8x8 pattern

for i = 1:4
    if i == 1
        I = Input(1:8,1:8); % Up-left
%         % ===== Horizontal =====
%         Out4Queen(1:4,1:8) = [ I(3,1),I(1,2),I(3,3),I(1,4),I(3,5),I(1,6),I(3,7),I(1,8);
%                                I(4,1),I(2,2),I(4,3),I(2,4),I(4,5),I(2,6),I(4,7),I(2,8);
%                                I(7,1),I(5,2),I(7,3),I(5,4),I(7,5),I(5,6),I(7,7),I(5,8);
%                                I(7,2),I(5,3),I(8,3),I(6,4),I(8,5),I(6,6),I(8,7),I(6,8)];   
        % ===== Vertical =====                   
        Out4Queen(1:4,1:8) = [ I(1,1),I(1,2),I(2,3),I(2,4),I(1,5),I(1,6),I(2,7),I(2,8);
                               I(3,1),I(3,2),I(4,3),I(4,4),I(3,5),I(3,6),I(4,7),I(4,8);
                               I(5,1),I(5,2),I(6,3),I(6,4),I(5,5),I(5,6),I(6,7),I(6,8);
                               I(7,1),I(7,2),I(8,3),I(8,4),I(7,5),I(7,6),I(8,7),I(8,8)];                     
    elseif i ==2
        I = Input(1:8,9:16); % Up-right
        % ===== Horizontal =====
        Out4Queen(1:4,9:16) = [ I(3,1),I(1,2),I(3,3),I(1,4),I(3,5),I(1,6),I(3,7),I(1,8);
                               I(4,1),I(2,2),I(4,3),I(2,4),I(4,5),I(2,6),I(4,7),I(2,8);
                               I(7,1),I(5,2),I(7,3),I(5,4),I(7,5),I(5,6),I(7,7),I(5,8);
                               I(7,2),I(5,3),I(8,3),I(6,4),I(8,5),I(6,6),I(8,7),I(6,8)];     
%         % ===== Vertical =====                   
%         Out4Queen(1:4,9:16) = [ I(1,1),I(1,2),I(2,3),I(2,4),I(1,5),I(1,6),I(2,7),I(2,8);
%                                I(3,1),I(3,2),I(4,3),I(4,4),I(3,5),I(3,6),I(4,7),I(4,8);
%                                I(5,1),I(5,2),I(6,3),I(6,4),I(5,5),I(5,6),I(6,7),I(6,8);
%                                I(7,1),I(7,2),I(8,3),I(8,4),I(7,5),I(7,6),I(8,7),I(8,8)];                 
    elseif i ==3
        I = Input(9:16,1:8); % Down-left
        % ===== Horizontal =====
        Out4Queen(5:8,1:8) = [ I(3,1),I(1,2),I(3,3),I(1,4),I(3,5),I(1,6),I(3,7),I(1,8);
                               I(4,1),I(2,2),I(4,3),I(2,4),I(4,5),I(2,6),I(4,7),I(2,8);
                               I(7,1),I(5,2),I(7,3),I(5,4),I(7,5),I(5,6),I(7,7),I(5,8);
                               I(7,2),I(5,3),I(8,3),I(6,4),I(8,5),I(6,6),I(8,7),I(6,8)];
%         % ===== Vertical =====                   
%         Out4Queen(5:8,1:8) = [ I(1,1),I(1,2),I(2,3),I(2,4),I(1,5),I(1,6),I(2,7),I(2,8);
%                                I(3,1),I(3,2),I(4,3),I(4,4),I(3,5),I(3,6),I(4,7),I(4,8);
%                                I(5,1),I(5,2),I(6,3),I(6,4),I(5,5),I(5,6),I(6,7),I(6,8);
%                                I(7,1),I(7,2),I(8,3),I(8,4),I(7,5),I(7,6),I(8,7),I(8,8)];                 
    else % i == 4
        I = Input(9:16,9:16); % Down-left
        % ===== Horizontal =====
        Out4Queen(5:8,9:16) = [ I(3,1),I(1,2),I(3,3),I(1,4),I(3,5),I(1,6),I(3,7),I(1,8);
                               I(4,1),I(2,2),I(4,3),I(2,4),I(4,5),I(2,6),I(4,7),I(2,8);
                               I(7,1),I(5,2),I(7,3),I(5,4),I(7,5),I(5,6),I(7,7),I(5,8);
                               I(7,2),I(5,3),I(8,3),I(6,4),I(8,5),I(6,6),I(8,7),I(6,8)]; 
%        % ===== Vertical =====                   
%         Out4Queen(5:8,9:16) = [ I(1,1),I(1,2),I(2,3),I(2,4),I(1,5),I(1,6),I(2,7),I(2,8);
%                                I(3,1),I(3,2),I(4,3),I(4,4),I(3,5),I(3,6),I(4,7),I(4,8);
%                                I(5,1),I(5,2),I(6,3),I(6,4),I(5,5),I(5,6),I(6,7),I(6,8);
%                                I(7,1),I(7,2),I(8,3),I(8,4),I(7,5),I(7,6),I(8,7),I(8,8)];                    
                           
    end
                        
end

end